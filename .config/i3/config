# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DejaVu Sans 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
exec --no-startup-id uim-toolbar-gtk3-systray

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+h split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+apostrophe layout stacking
bindsym $mod+less layout tabbed
bindsym $mod+greater layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

# browser
set $ws1 "1:  "
# email (mu4e)
set $ws2 "2: 﫯  "
# file manager (Dired)
set $ws3 "3:  "
# programming?
set $ws4 "4: 襁  "
# media
set $ws5 "5:   "
# reference
set $ws6 "6: 龎  "
# terminal (vterm)
set $ws7 "7:   "
# word processor
set $ws8 "8:   "
# organizer (Org Mode/Agenda)
set $ws9 "9:  "
# text editor (Emacs)
set $ws10 "10:  "

# switch to workspace
bindsym $mod+b workspace number $ws1
bindsym $mod+e workspace number $ws2; mode "  "
bindsym $mod+i workspace number $ws3; mode "  "
bindsym $mod+c workspace number $ws4; mode "  "
bindsym $mod+m workspace number $ws5
bindsym $mod+r workspace number $ws6
bindsym $mod+t workspace number $ws7; mode "  "
bindsym $mod+w workspace number $ws8
bindsym $mod+o workspace number $ws9; mode "  "
bindsym $mod+x workspace number $ws10; mode "  "

# move focused container to workspace
bindsym $mod+Shift+b move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+e move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+i move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+c move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+m move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+r move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+t move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+w move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Shift+o move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Shift+x move container to workspace number $ws10; workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+a reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+z restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+y exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+z
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+z mode "default"
}

bindsym $mod+z mode "resize"

# Emacs mode, to reuse the focus change keys in Emacs
mode "  " {
     binding_mode_indicator no
     bindsym $mod+b workspace number $ws1; mode "default"
     bindsym $mod+e workspace number $ws2
     bindsym $mod+i workspace number $ws3
     bindsym $mod+c workspace number $ws4
     bindsym $mod+m workspace number $ws5; mode "default"
     bindsym $mod+r workspace number $ws6; mode "default"
     bindsym $mod+t workspace number $ws7
     bindsym $mod+w workspace number $ws8; mode "default"
     bindsym $mod+o workspace number $ws9
     bindsym $mod+x workspace number $ws10

     # move focused container to workspace
     bindsym $mod+Shift+b move container to workspace number $ws1; workspace number $ws1; mode "default"
     bindsym $mod+Shift+e move container to workspace number $ws2; workspace number $ws2; mode "default" 
     bindsym $mod+Shift+i move container to workspace number $ws3; workspace number $ws3; mode "default"
     bindsym $mod+Shift+c move container to workspace number $ws4; workspace number $ws4; mode "default"
     bindsym $mod+Shift+m move container to workspace number $ws5; workspace number $ws5; mode "default"
     bindsym $mod+Shift+r move container to workspace number $ws6; workspace number $ws6; mode "default"
     bindsym $mod+Shift+t move container to workspace number $ws7; workspace number $ws7; mode "default"
     bindsym $mod+Shift+w move container to workspace number $ws8; workspace number $ws8; mode "default"
     bindsym $mod+Shift+o move container to workspace number $ws9; workspace number $ws9; mode "default"
     bindsym $mod+Shift+x move container to workspace number $ws10; workspace number $ws10; mode "default"

     # start dmenu (a program launcher)
     bindsym $mod+d exec dmenu_run
     # reload the configuration file
     bindsym $mod+Shift+a reload
     # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
     bindsym $mod+Shift+z restart
     # exit i3 (logs you out of your X session)
     bindsym $mod+Shift+y exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

     # kill focused window
     bindsym $mod+Shift+q kill

     # leave emacs mode manually
     bindsym $mod+z mode "default"

#change to single-monitor mode
bindsym $mod+1 exec /home/lj/.screenlayout/1mon-1.sh
#change to dual-monitor mode
bindsym $mod+2 exec /home/lj/.screenlayout/2mon_dvi1.sh
#change to alternate single-monitor mode (if monitor is DVI-1-2)
bindsym $mod+3 exec /home/lj/.screenlayout/1mon-2.sh
#change to dual-monitor mode (if monitor is DVI-1-2)
bindsym $mod+4 exec /home/lj/.screenlayout/2mon_dvi2.sh
}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
#	mode hide
#	hidden_state hide
#	modifier Mod2
	strip_workspace_numbers yes
	colors {
	       background		#3E0B49
	       focused_workspace	#FDD834	#3E0B49	#FDD834
	       inactive_workspace	#3E0B49 #3E0B49	#D0C2D2
	       urgent_workspace		#3E0B49 #3E0B49	#D0C2D2
	}
	font pango:DejaVu Sans 14
}

default_border none

exec chromium
exec picom -b
exec feh -z --bg-fill ~/Pictures/Wallpaper/gris

# open up Emacs client frames
# yes this is a hacky mess, buuut it works for now without the client buffers getting mixed up or files that are supposed to be in the background coming to the fore, so.
# open some files and run some commands without frames so subsequent frames can switch to the buffers created here with switch-to-buffer, which seems quicker and less likely to be taken over by the files that are being opened as we go
# exec emacsclient -e '(find-file "~/Documents/website/blog/posts.org")' -e '(find-file "~/Documents/records/journal.org")' -e '(find-file "~/Documents/writing/soseono/draft.org")' -e '(find-file "~/.config/i3/config")' -e '(dired "~/Documents")' -e '(find-file "~/.config/emacs/emacsconfig.el")'
# trying to make server return immediately after visiting files etc.
#exec emacsclient --no-wait -e '(find-file "~/Documents/website/blog/posts.org")' -e '(find-file "~/Documents/records/journal.org")' -e '(find-file "~/Documents/writing/soseono/draft.org")' -e '(find-file "~/.config/i3/config")' -e '(find-file "~/.config/emacs/emacsconfig.el")'
# Mu4e frame in email workspace
exec emacsclient -c -e '(mu4e)' -F '((name . "emacs-email"))'
# DEBUG setup for monitors
#-e '(find-file "~/.xinitrc")' -e '(find-file "~/.bashrc")' -e '(find-file "/home/lj/.screenlayout/2mon_10.sh")' -e '(find-file "/etc/X11/xorg.conf.d/20-displaylink.conf")'
# Dired frame in file manager workspace
exec emacsclient -c -e '(dired "~/Documents")' -e '(delete-other-windows)' -F '((name . "emacs-files"))'
# Text editing frame for coding
exec emacsclient -c -e '(find-file "~/.config/emacs/emacsconfig.el")' -e '(delete-other-windows)' -F '((name . "emacs-coding"))'
#Vterm frame in terminal workspace
exec emacsclient -c -e '(vterm)' -e '(delete-other-windows)' -F '((name . "emacs-term"))'
# Org agenda frame in organizer workspace
exec emacsclient -c -e '(org-agenda-list)' -e '(delete-other-windows)' -F '((name . "emacs-org"))'
# Text editing frame in text workspace
exec emacsclient -c ~/Documents/translations/bluebeard/bluebeard-core.adoc -F '((name . "emacs-text"))'
# Go to Agenda workspace so that's where I start out
exec i3-msg workspace number $ws9
# read desktop? Is this how it works??
# exec emacsclient -c -e '(desktop-read "~/.emacs.d/desktop")'
# let's try running without evaluating desktop-read, since that's in a hook function
#exec emacsclient -c 
# or maybe try to open files individually??
# exec emacsclient --no-wait ~/Documents/website/blog/posts.org
# exec emacsclient --no-wait ~/Documents/records/journal.org
# exec emacsclient --no-wait ~/Documents/writing/soseono/draft.org
# exec emacsclient --no-wait ~/.config/i3/config

#assign workspaces to monitors
#browser
workspace $ws1 output HDMI-1
#emacs
workspace $ws2 output HDMI-1
#game
workspace $ws4 output HDMI-1
#media
workspace $ws5 output HDMI-1
#reference
workspace $ws6 output DVI-I-1-2 DVI-I-1-1 DVI-I-1-10 DVI-I-1-11 DVI-I-1-12 
#terminal
workspace $ws7 output HDMI-1
#word processor
workspace $ws8 output HDMI-1

#assign apps to workspaces
#chromium to browser
assign [class="Chromium"] $ws1
assign [class="Firefox"] $ws1
assign [class="Qutebrowser"] $ws1

#emacs to emacs
#assign [class="Emacs"] $ws2

# detailed Emacs assignment rules
# Mu4e to email workspace
assign [class="Emacs" title="emacs-email"] $ws2
# Dired to file manager workspace
assign [class="Emacs" title="emacs-files"] $ws3
# init.el to coding workspace
assign [class="Emacs" title="emacs-coding"] $ws4
# Vterm to terminal workspace
assign [class="Emacs" title="emacs-term"] $ws7
# Org Agenda to org workspace
assign [class="Emacs" title="emacs-org"] $ws9
# Text file to text editing workspace
assign [class="Emacs" title="emacs-text"] $ws10

#thunar to files
assign [class="Thunar"] $ws3
# mupdf to references
assign [class="MuPDF"] $ws6
#termite to terminal
assign [class="Termite"] $ws7
#libreoffice to word processor
assign [class="libreoffice"] $ws8

#move workspace to first monitor
bindsym $mod+Shift+1 move workspace to output HDMI-1
#move workspace to second monitor
bindsym $mod+Shift+2 move workspace to output DVI-I-1-1
#move workspace to alternate second monitor
bindsym $mod+Shift+3 move workspace to output DVI-I-1-2

#change to single-monitor mode
bindsym $mod+1 exec /home/lj/.screenlayout/1mon-1.sh
#change to dual-monitor mode
bindsym $mod+2 exec /home/lj/.screenlayout/2mon_dvi1.sh
#change to alternate single-monitor mode (if monitor is DVI-1-2)
bindsym $mod+3 exec /home/lj/.screenlayout/1mon-2.sh
#change to dual-monitor mode (if monitor is DVI-1-2)
bindsym $mod+4 exec /home/lj/.screenlayout/2mon_dvi2.sh